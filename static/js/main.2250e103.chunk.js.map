{"version":3,"sources":["components/louder/louder.gif","components/wednesday/wednes.module.css","components/monday/button.module.css","components/monday/addName.module.css","components/monday/names.module.css","components/tousday/TodoListTitle.js","components/tousday/AddNewItemForm.js","components/tousday/TodoListHeader.js","components/tousday/TodoListTask.js","components/tousday/TodoListTasks.js","components/tousday/TodoListFooter.js","components/tousday/TodoList.js","components/tousday/Tuesday.js","components/monday/Text.js","components/monday/Input.js","components/monday/Button.js","components/monday/AddName.js","components/monday/Name.js","components/monday/Names.js","components/monday/Monday.js","components/louder/Louder.js","components/menu/Menu.js","components/wednesday/Input.js","SettingsReducer.js","WednasdayReducer.js","api/api.js","components/wednesday/wednasday.js","App.js","serviceWorker.js","TuesdayReducer.js","store.js","index.js"],"names":["module","exports","TodoListTitle","onDeleteTodolist","props","deleteTodolist","id","render","className","title","onClick","React","Component","AddNewItemForm","state","error","onAddItemButtonClick","newText","addItem","setState","onKeyPress","e","key","onTitleCenged","currentTarget","value","addClassError","type","placeholder","onChange","TodoListHeader","addTask","TodoListTask","editMod","onShow","activatedOnShow","deactivatedOnShow","activatedEditMod","deactivatedEditMod","onIsDoneChanget","changeStatus","checked","task","onTitleChanged","changesTitle","onDeleteTask","deleteTask","onPriorityChanged","changesPriority","option","priority","map","p","classIsDoneClass","isDone","onMouseOver","onMouseOut","autoFocus","onBlur","created","update","finished","TodoListTasks","tasksElemrnts","tasks","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","filterValue","classForCompleted","classForActive","TodoList","newFilterValue","taskId","chengeStatus","status","filter","t","ConnectedTodoList","connect","dispatch","todolistId","Tuesday","addTodoList","addTodolis","todolists","tl","ConnectedTuesday","tuesdayPage","Text","counter","Input","Button","onAddNewName","newAddName","addName","onKeypress","onCenged","errorClass","classes","button","AddName","Name","name","Names","names","Monday","qualities","newNameId","newName","newNames","saveState","Louder","src","louder","Menu","isMenuOpen","onMenuButtonClick","classAdd","exact","to","activeClassName","onChangedStyle","htmlFor","initialState","style","SettingsReducer","action","s","isCheck","isSendingRequest","isLoading","WednesdayReducer","loading","request","instance","axios","create","baseURL","api","post","success","tryCatch","onCheckClick","a","response","console","log","data","Wednesday","addStyle","onCheckInput","checkInput","setStatus","setLoading","setSendingRequest","then","catch","inputRadio","stylePage","find","disabled","settingsReducer","wednesdayReducer","addStyleAC","checkInputAC","setLoadingAC","setStatusAC","setSendingRequestAC","App","path","this","loadingSet","setTimeout","ConnectedApp","Boolean","window","location","hostname","match","Date","toLocaleString","updated","TuesdayReducer","newTodoList","getTime","newTask","reducer","combineReducers","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2250e103.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/louder.31dd2fb3.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"wednes_dark__2hRTp\",\"light\":\"wednes_light__3xOL9\",\"green\":\"wednes_green__2Kurj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2buwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addName\":\"addName_addName__1Qux2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"names\":\"names_names__2fcY6\"};","import React from 'react';\nimport '../../App.css';\n\n\nclass TodoListTitle extends React.Component {\n    onDeleteTodolist =()=>{\n        this.props.deleteTodolist(this.props.id)\n    };\n    render = () => {\n        return (\n                <h3 className=\"todoList-header__title\">\n                    {this.props.title}\n                    <button onClick={this.onDeleteTodolist}>delete</button>\n                </h3>\n        );\n    }\n}\n\nexport default TodoListTitle;\n\n","import React from 'react';\n\nimport '../../App.css';\n\n\nclass AddNewItemForm extends React.Component {\n    state = {\n        error: false,\n        title: ' '\n    };\n\n    onAddItemButtonClick=()=>{\n        let newText = this.state.title\n\n        if(newText != '') {\n            this.props.addItem(newText);\n            this.setState({error: false, title: ''})\n\n        } else {\n            this.setState({error:true})\n        }\n    };\n    onKeyPress = (e)=>{\n        if(e.key === 'Enter'){\n            this.onAddItemButtonClick()\n        }\n    };\n    onTitleCenged = (e)=>{\n        this.setState({error: false,\n            title: e.currentTarget.value,\n        })\n    };\n    render = () => {\n        let addClassError = this.state.error === true ? 'error' : '';\n        return (\n\n                <div className=\"todoList-newTaskForm\">\n                    <input\n                        className={addClassError}\n                        type=\"text\" placeholder=\"New task name\"\n                        onKeyPress={this.onKeyPress}\n                        value={this.state.title}\n                        onChange={this.onTitleCenged}\n                    />\n                    <button onClick={this.onAddItemButtonClick}>Add</button>\n                </div>\n        );\n    }\n}\n\nexport default AddNewItemForm;\n\n","import React from 'react';\n\nimport '../../App.css';\nimport TodoListTitle from \"./TodoListTitle\";\nimport AddNewItemForm from \"./AddNewItemForm\";\n\n\nclass TodoListHeader extends React.Component {\n    render = () => {\n        return (\n            <div className=\"todoList-header\">\n                <TodoListTitle\n                    title={this.props.title}\n                    id = {this.props.id}\n                    deleteTodolist = {this.props.deleteTodolist}\n                />\n                <AddNewItemForm addItem={this.props.addTask}/>\n            </div>\n        );\n    }\n}\n\nexport default TodoListHeader;\n\n","import React from 'react';\nimport '../../App.css';\n\n\nclass TodoListTask extends React.Component {\n\n    state = {\n        editMod: false,\n        // priority: ['hight', 'midl', 'low'],\n        onShow: false,\n    };\n\n    activatedOnShow = ()=>{\n        this.setState({onShow: true})\n    };\n\n    deactivatedOnShow = ()=>{\n        this.setState({onShow: false})\n    };\n\n    activatedEditMod = ()=>{\n        this.setState({editMod: true})\n    };\n\n    deactivatedEditMod = ()=>{\n        this.setState({editMod: false})\n    };\n\n    onIsDoneChanget = (e)=>{\n        this.props.changeStatus(e.currentTarget.checked, this.props.task.id);\n    };\n\n    onTitleChanged = (e)=>{\n        this.props.changesTitle(e.currentTarget.value, this.props.task.id)\n    };\n\n    onDeleteTask = ()=>{\n        this.props.deleteTask(this.props.task.id)\n    };\n\n    onPriorityChanged = (e)=>{\n        this.props.changesPriority(e.currentTarget.value, this.props.task.id);\n\n    };\n\n\n    render = () => {\n        let priority = [{id: 0, priority: 'high'}, {id: 1, priority: 'medium'}, {id: 2, priority: 'low'}];\n\n        let option = priority.map(p => <option key={p.id} value={p.priority}> {p.priority} </option>);\n\n        let classIsDoneClass = this.props.task.isDone ? \"todoList-task done\" : \"todoList-task\";\n        return (\n            <div>\n                <div className={classIsDoneClass} onMouseOver={this.activatedOnShow}\n                     onMouseOut={this.deactivatedOnShow}>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.props.task.isDone}\n                        onChange={this.onIsDoneChanget}\n                    />\n                    {this.state.editMod\n                        ? <input\n                            value={this.props.task.title}\n                            autoFocus={true}\n                            onBlur={this.deactivatedEditMod}\n                            onChange={this.onTitleChanged}\n                        />\n                        : <span onClick={this.activatedEditMod}>\n                    {this.props.task.id}, {this.props.task.title},</span>}\n                    <span> priority:\n                        <select onChange={this.onPriorityChanged} value={this.props.task.priority}>\n                            {option}\n                            {/*<option value={this.state.priority[0]}>{this.state.priority[0]}</option>*/}\n                            {/*<option value={this.state.priority[1]}>{this.state.priority[1]}</option>*/}\n                            {/*<option value={this.state.priority[2]}>{this.state.priority[2]}</option>*/}\n                        </select>\n                        {this.props.task.priority}\n                    </span>\n                    <span onClick={this.onDeleteTask}> <i className=\"fas fa-times\"></i></span>\n                    {this.state.onShow === true ? <div className='status'>\n                        <p>task {this.props.task.title}</p>\n                        <span>created: {this.props.task.created} </span>\n                        <span>updated: {this.props.task.update} </span>\n                        <span>finished: {this.props.task.finished} </span>\n                    </div> : null}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport '../../App.css';\nimport TodoListTask from \"./TodoListTask\";\n\n\nclass TodoListTasks extends React.Component {\n\n\n    render = () => {\n\n        let tasksElemrnts = this.props.tasks.map((task)=>{\n            return(\n                <TodoListTask\n                    key = {task.id}\n                    task = {task}\n                    changeStatus={this.props.changeStatus}\n                    changesTitle={this.props.changesTitle}\n                    deleteTask={this.props.deleteTask}\n                    changesPriority = {this.props.changesPriority}\n                />\n            )\n        });\n\n        return (\n            <div className=\"todoList-tasks\">\n                {tasksElemrnts}\n                {/*<TodoListTask  title = {this.props.tasks[1].title} isDone={this.props.tasks[1].isDone} />*/}\n                {/*<TodoListTask  title = {this.props.tasks[2].title} isDone={this.props.tasks[2].isDone} />*/}\n                {/*<TodoListTask  title = {this.props.tasks[3].title} isDone={this.props.tasks[3].isDone} />*/}\n            </div>\n\n        );\n    }\n}\n\nexport default TodoListTasks;\n\n\n","import React from 'react';\nimport '../../App.css';\n\n\nclass TodoListFooter extends React.Component {\n    state = {\n        isHidden: false\n    };\n\n\n    onAllFilterClick = () => {this.props.changeFilter('All')}\n    onCompletedFilterClick = () => {this.props.changeFilter('Completed')}\n    onActiveFilterClick = () => {this.props.changeFilter('Active')}\n    onShowFiltersClick = () => {this.setState({isHidden: false}) };\n    onHideFiltersClick = () => {this.setState({isHidden: true}) };\n\n\n    render = () => {\n        let classForAll = this.props.filterValue === 'All' ? 'filter-active' : '';\n        let classForCompleted = this.props.filterValue === 'Completed' ? 'filter-active' : '';\n        let classForActive = this.props.filterValue === 'Active' ? 'filter-active' : '';\n\n\n        return (\n            <div className=\"todoList-footer\">\n                {!this.state.isHidden && <div>\n                    <button className={classForAll} onClick={this.onAllFilterClick}>All</button>\n                    <button className={classForCompleted} onClick={this.onCompletedFilterClick}>Completed</button>\n                    <button className={classForActive} onClick={this.onActiveFilterClick}>Active</button>\n                </div>}\n                {!this.state.isHidden && <span onClick={this.onHideFiltersClick}>hide</span> }\n                {this.state.isHidden && <span onClick={this.onShowFiltersClick}>show</span> }\n\n            </div>\n        );\n    }\n}\n\nexport default TodoListFooter;\n\n","import React from 'react';\n\nimport '../../App.css';\n\nimport TodoListHeader from \"./TodoListHeader\";\nimport TodoListTasks from \"./TodoListTasks\";\nimport TodoListFooter from \"./TodoListFooter\";\nimport {connect} from \"react-redux\";\n\n\nclass TodoList extends React.Component {\n\n    // constructor(props) {\n    //     super(props);\n    // }\n    //\n    // saveState = () => {\n    //     let stateAsString = JSON.stringify(this.state);\n    //     localStorage.setItem(\"state\" + this.props.id, stateAsString)\n    // };\n    //\n    // restoreState = () => {\n    //     let stateAsString = localStorage.getItem(\"state\"+this.props.id);\n    //     if (stateAsString) {\n    //         let state = JSON.parse(stateAsString);\n    //         state.tasks.forEach((t) => {\n    //             if (t.id >= this.newTaskId) {\n    //                 this.newTaskId = t.id + 1\n    //             }\n    //         });\n    //         this.setState(state)\n    //     }\n    // };\n    //\n    // componentDidMount() {\n    //     this.restoreState()\n    // }\n\n    state = {\n        // tasks: [\n        //     // { id: 0, title: 'HTML', isDone: true, priority: ['low', 'hight', 'midl']},\n        //     // { id: 1, title: 'Css', isDone: false, priority: 'hight'},\n        //     // { id: 2, title: 'JS', isDone: true, priority: 'hight'},\n        //     // { id:3, title: 'React', isDone: false, priority:'low'},\n        // ],\n        filterValue:'All'\n    };\n\n\n    // newTaskId = 0;\n    addTask = (newText)=>{\n        // let newTask = {\n        //         id: this.newTaskId,\n        //         title: newText,\n        //         isDone: false,\n        //         priority: 'low',\n        //         created: new Date().toLocaleString(),\n        //         updated: '',\n        //         finished: '',\n        //     }\n\n        // ;\n        // this.newTaskId++\n        // let newTasks = [...this.state.tasks, newTask];\n        // this.setState({\n        //     tasks: newTasks\n        // }, this.saveState);\n        this.props.addTask(this.props.id, newText)\n    };\n\n    changeFilter = (newFilterValue)=>{\n        this.setState({\n            filterValue: newFilterValue\n        })\n    };\n\n\n    changeStatus = (isDone, taskId)=>{\n        // let tasksCopy = this.state.tasks.map((t)=>{\n        //     if (t.id===taskId){\n        //         return {...t, isDone: isDone, finished: new Date().toLocaleString()}\n        //     }\n        //     return t\n        // });\n        // this.setState({\n        //     tasks: tasksCopy\n        // })\n        this.props.chengeStatus(this.props.id, isDone, taskId)\n    };\n\n    changesTitle = (title, taskId)=>{\n        // let tasksCopy = this.state.tasks.map((t)=>{\n        //     if (t.id===taskId){\n        //         return {...t, title: title, update: new Date().toLocaleString()}\n        //     }\n        //     return t\n        // });\n        // this.setState({\n        //     tasks: tasksCopy\n        // })\n        this.props.changesTitle(this.props.id, title, taskId)\n    };\n\n    changesPriority = (status, taskId)=>{\n        // let tasksNew = this.state.tasks.map((t)=>{\n        //     if(t.id===taskId){\n        //         return {...t, priority: status, update: new Date().toLocaleString()}\n        //     } else {\n        //         return t\n        //     }\n        // });\n        // this.setState({tasks: tasksNew}, ()=> {\n        //   this.saveState()\n        // })\n        this.props.changesPriority(this.props.id, status,taskId)\n    };\n\n    deleteTask = (taskId)=>{\n        // let tasks = this.state.tasks.filter((t)=>{\n        //     return t.id !== taskId\n        // });\n        // this.setState({tasks})\n        this.props.deleteTask(this.props.id, taskId)\n    };\n\n    render = () => {\n\n        return (\n                <div className=\"todoList\">\n                    <TodoListHeader\n                        deleteTodolist = {this.props.deleteTodolist}\n                        id = {this.props.id}\n                        addTask={this.addTask}\n                        title = {this.props.title}\n                    />\n                    <TodoListTasks\n                        changesPriority ={this.changesPriority}\n                        deleteTask = {this.deleteTask}\n                        changeStatus = {this.changeStatus}\n                        changesTitle ={this.changesTitle}\n                        tasks={this.props.tasks.filter((t)=>{\n                                if(this.state.filterValue==='All'){\n                                    return true\n                                }\n                                if(this.state.filterValue==='Completed'){\n                                    if(t.isDone===true){\n                                        return true\n                                    }else{\n                                        return false\n                                    }\n                                }\n                                if(this.state.filterValue==='Active'){\n                                    if(t.isDone===true){\n                                        return false\n                                    }else {\n                                        return true\n                                    }\n                                }\n                            }\n                        )} />\n                    <TodoListFooter changeFilter = {this.changeFilter} filterValue={this.state.filterValue} />\n                </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTask (todolistId, newText) {\n            const action = {\n            type: \"ADD_TASK\",\n            todolistId: todolistId,\n            title: newText,\n            };\n            dispatch(action)\n        },\n\n        chengeStatus (todolistId, isDone, taskId){\n            const action={\n                type: \"CHENGE_STATUS\",\n                todolistId: todolistId,\n                isDone: isDone,\n                taskId: taskId,\n            };\n            dispatch(action)\n        },\n\n        changesTitle (todolistId, title, taskId){\n            const action={\n                type: \"CHANGE_TYTLE\",\n                todolistId: todolistId,\n                title: title,\n                taskId: taskId\n            };\n            dispatch(action)\n        },\n\n        changesPriority(todolistId, status, taskId){\n            const action={\n                type: \"CHANGE_PRIORITY\",\n                todolistId: todolistId,\n                priority: status,\n                taskId: taskId,\n            };\n            dispatch(action)\n        },\n\n        deleteTask(todolistId, taskId){\n            const action={\n                type: \"DELETE_TASK\",\n                todolistId: todolistId,\n                taskId: taskId,\n            };\n            dispatch(action)\n        }\n    }\n\n};\n\n\nconst ConnectedTodoList = connect(null, mapDispatchToProps)(TodoList);\nexport default ConnectedTodoList;\n","import React from 'react';\n\nimport '../../App.css';\n\nimport TodoList from \"./TodoList\";\nimport AddNewItemForm from \"./AddNewItemForm\";\nimport {connect} from \"react-redux\";\n\n\nclass Tuesday extends React.Component {\n\n    // saveState = ()=>{\n    //     let stateAsString = JSON.stringify(this.state);\n    //     localStorage.setItem(\"todolists\"+this.props.id,  stateAsString);\n    // };\n    //\n    // restoresState = ()=>{\n    //     let state = {\n    //         todolists: [],\n    //\n    //     };\n    //     let stateAsString= localStorage.getItem(\"todolists\" + this.props.id);\n    //     if(stateAsString){\n    //         state = JSON.parse(stateAsString);\n    //     }\n    //\n    //     this.setState(state, ()=>{\n    //         this.state.todolists.forEach(t=>{\n    //             if(t.id>=this.newTodoListId){\n    //                 this.newTodoListId = t.id + 1\n    //             }\n    //             this.setState({state})\n    //         })\n    //     });\n    // };\n    //\n    // componentDidMount() {\n    //     this.restoresState()\n    // };\n\n    // state = {\n    //     todolists: [\n    //         {id: 10, title: 'days'},\n    //         {id: 11, title: 'week'}\n    //         ]\n    // };\n\n    // newTodoListId = 0;\n    addTodoList = (newText)=>{\n        // let newTodoList = {\n        //     id: this.newTodoListId,\n        //     title: newText,\n        // };\n        // this.newTodoListId++;\n        // let newTodoLists = [...this.state.todolists, newTodoList];\n        this.props.addTodolis(newText)\n        // this.setState({\n        //     todolists: newTodoLists\n        // }, this.saveState);\n    };\n\n    deleteTodolist = (todolistId)=>{\n        this.props.deleteTodolist(todolistId)\n    };\n\n    render = () => {\n        let todolists = this.props.todolists.map((tl)=>{\n          return (\n              <TodoList\n                  id = {tl.id}\n                  key = {tl.id}\n                  title = {tl.title}\n                  deleteTodolist={this.deleteTodolist}\n                  tasks={tl.tasks}\n              />)\n        });\n\n        return (\n            <div className='tuesday'>\n                <AddNewItemForm addItem = {this.addTodoList} />\n\n                    {todolists}\n\n            </div>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        todolists: state.tuesdayPage.todolists\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addTodolis: (newText) => {\n            const action = {\n                type: \"ADD_TODOLIST\",\n                title: newText\n            };\n            dispatch(action)\n        },\n        deleteTodolist: (todolistId) => {\n            const action = {\n                type: \"DELETE_TODOLIST\",\n                todolistId: todolistId,\n            };\n            dispatch(action)\n        }\n\n    }\n\n};\n\nconst ConnectedTuesday = connect(mapStateToProps,mapDispatchToProps)(Tuesday);\nexport default ConnectedTuesday;\n\n\n\n","import React from 'react';\n\nimport '../../App.css';\n\n\nclass Text extends React.Component {\n\n\n\n    render = () => {\n\n        return (\n            <div>\n                <span className='counter'>{this.props.counter}</span>\n            </div>\n\n        )\n\n    }\n}\n\n\n//\nexport default Text;\n","import React from 'react';\nimport '../../App.css';\n\nclass Input extends React.Component {\n\n    render = () => {\n\n        return (\n            <div>\n\n                <input\n                    type='text'\n                    className={this.props.className}\n                    placeholder='add name'\n                    //ref = {this.newCounterRef}\n                    onKeyPress={this.props.onKeyPress}\n                    onChange={this.props.onChange}\n                    value={this.props.value}\n                />\n\n            </div>\n        )\n\n    }\n}\n\n\n//\nexport default Input;\n","import React from 'react';\n\nimport '../../App.css';\nimport Input from \"./Input\";\nimport classes from './button.module.css'\n\n\n\nclass Button extends React.Component {\n    state={\n       error: false,\n        title: ''\n}\n    //newCounterRef = React.createRef();\n    onAddNewName = () => {\n        let newAddName = this.state.title; //this.newCounterRef.current.value\n                                            //this.newCounterRef.current.value = '';\n\n        if(newAddName != '') {\n            this.props.addName(newAddName);\n            this.setState({error: false,\n                           title: '',\n            });\n        }else {\n            this.setState({error: true})\n        }\n    };\n    onKeypress = (e)=>{\n        if(e.key === 'Enter'){\n            this.onAddNewName()\n        }\n    };\n    onCenged = (e)=>{\n        this.setState({title: e.currentTarget.value,\n                        error:false,\n        })\n    }\n    render = () => {\n        let errorClass = this.state.error === true ? 'error' : \"\";\n        return (\n            <div className={classes.button}>\n                <Input className = {errorClass}\n                       onKeyPress={this.onKeypress}\n                       onChange={this.onCenged}\n                       value={this.state.title}\n                />\n                {/*<input*/}\n                {/*    className={errorClass}*/}\n                {/*    type='text'*/}\n                {/*    placeholder='add name'*/}\n                {/*    //ref = {this.newCounterRef}*/}\n                {/*    onKeyPress={this.onKeypress}*/}\n                {/*    onChange={this.onCenged}*/}\n                {/*    value={this.state.title}*/}\n                {/*/>*/}\n                <button onClick={this.onAddNewName}>click me</button>\n            </div>\n        )\n\n    }\n}\n\n\n//\nexport default Button;\n","import React from 'react';\nimport '../../App.css';\nimport Text from \"./Text\";\nimport Button from \"./Button\";\nimport classes from \"./addName.module.css\"\n\n\nclass AddName extends React.Component {\n\n\n\n    render = () => {\n\n        return (\n            <div className={classes.addName}>\n                <Text counter={this.props.counter}/>\n                <Button addName={this.props.addName} />\n            </div>\n        )\n\n    }\n\n\n\n\n}\n\n\n//\nexport default AddName;\n","import React from 'react';\n\nimport '../../App.css';\n\n\nclass Name extends React.Component {\n\n\n\n    render = () => {\n\n        return (\n            <div>\n                <span>{this.props.name}</span>\n            </div>\n        )\n\n    }\n}\n\n\n//\nexport default Name;\n","import React from 'react';\nimport '../../App.css';\nimport Name from \"./Name\";\nimport classes from \"./names.module.css\"\n\n\nclass Names extends React.Component {\n\n\n\n    render = () => {\n\n     let Names = this.props.names.map((name)=>{\n            return(\n                <Name key={name.id} name={name.name}/>\n            )\n        });\n        return (\n            <div className={classes.names}>\n                {Names}\n            </div>\n        )\n\n    }\n}\n\n\n//\nexport default Names;\n","import React from 'react';\nimport '../../App.css';\nimport AddName from \"./AddName\";\nimport Names from \"./Names\";\n\n\nclass Monday extends React.Component {\n\n    // saveState = () => {\n    //     let stateAsString = JSON.stringify(this.state);\n    //     localStorage.setItem(\"state\", stateAsString)\n    // };\n    //\n    // restoreState = () => {\n    //     let stateAsString = localStorage.getItem(\"state\");\n    //     if (stateAsString) {\n    //         let state = JSON.parse(stateAsString);\n    //         state.names.forEach(name => {\n    //             if (name.id >= this.newNameId) {\n    //                 this.newNameId = name.id + 1\n    //             }\n    //         });\n    //         this.setState(state)\n    //     }\n    // };\n    //\n    // componentDidMount() {\n    //     this.restoreState()\n    // }\n\n    state = {\n        counter: 0,\n        qualities: [\n            {id: 0, title: 'communist', type: false},\n            {id: 1, title: 'liberall', type: true},\n            {id: 2, title: 'monarchist', type: false},\n            {id: 3, title: 'anarchist', type: false},\n            {id: 4, title: 'nationalist', type: false},\n        ],\n        names: [\n            // {id: 0, name: 'Katerina'},\n            // {id: 1, name: 'Ivan'},\n            // {id: 2, name: 'Timon'},\n        ],\n    };\n\n\n    newNameId = 0;\n    addName = (newAddName) => {\n        let newName = {id: this.newNameId, name: newAddName};\n        let newNames = [...this.state.names, newName];\n        this.newNameId++;\n        this.setState(\n            {\n                names: newNames,\n                counter: this.state.counter + 1,\n            }, this.saveState);\n\n    };\n\n    render = () => {\n\n        return (\n            <div>\n                <AddName\n                    addName={this.addName}\n                    counter={this.state.counter}\n                />\n                <Names names={this.state.names} />\n            </div>\n        )\n\n    }\n}\n\n\n//\nexport default Monday;\n","import React from 'react';\n\nimport '../../App.css';\nimport louder from './louder.gif'\n\nclass Louder extends React.Component {\n\n    render = () => {\n\n        return (\n            <div className='louder'>\n                <img src={louder}/>\n            </div>\n\n        )\n    }\n}\n\nexport default Louder;\n","import React from 'react';\n\nimport '../../App.css';\nimport {NavLink} from \"react-router-dom\";\n\nclass Menu extends React.Component {\n    state = {\n        isMenuOpen: false,\n};\n    onMenuButtonClick = () => {\n        this.setState({isMenuOpen: !this.state.isMenuOpen})\n    };\n\n    render = () => {\n        let classAdd = this.state.isMenuOpen ? \"show\" : \"nav\";\n        return (\n            <div className='menu'>\n                <div className='menu-button' onClick={this.onMenuButtonClick}>\n                    <i className=\"fas fa-bars\"></i>\n                </div>\n                <nav className={`nav + ${classAdd}`}>\n                    <div onClick={this.onMenuButtonClick} className='menu-close'>\n                        <i className=\"fas fa-times\"></i>\n                    </div>\n                    <ul className='menu-items'>\n                        <li className='menu-list'>\n                            <NavLink exact to='/'  activeClassName='active' className='menu-link'>Monday</NavLink>\n                        </li>\n                        <li className='menu-list'>\n                            <NavLink to='/Tuesday'  activeClassName='active' className='menu-link'>Truesday</NavLink>\n                        </li>\n                        <li className='menu-list'>\n                            <NavLink to='/Wednesday'  activeClassName='active' className='menu-link'>Wednesday</NavLink>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        )\n\n    }\n}\n\n\n\nexport default Menu;\n","import React from \"react\";\r\nimport style from './wednes.module.css'\r\nclass Input extends React.Component{\r\n\r\n    onChangedStyle = (e)=>{\r\n        this.props.onChangedStyle(this.props.id, e.currentTarget.checked)\r\n    };\r\n\r\n    render=()=> {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <input type='radio' name='radio' id={this.props.id} checked={this.props.checked} onChange={this.onChangedStyle} />\r\n                <label htmlFor={this.props.id}>{this.props.name}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Input","\r\nexport const ADD_STYLE= 'ADD_STYLE';\r\n\r\nconst initialState = {\r\n    style: [\r\n        { id: 1, name: 'dark', status: false },\r\n        { id: 2, name: 'green', status: false},\r\n        { id: 3, name: 'light', status: true },\r\n    ]\r\n};\r\n\r\n\r\nconst SettingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_STYLE:\r\n            return {\r\n                ...state,\r\n                style: state.style.map(s=>{\r\n                    if(s.id !== action.id){\r\n                        return {...s, status: false}\r\n                    } else {\r\n                        return {...s,\r\n                            status: action.status,\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\n\r\nexport const addStyleAC = (id, status) => {\r\n    return {\r\n        type: ADD_STYLE,\r\n        id: id,\r\n        status: status\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default SettingsReducer\r\n","\r\nexport const CHECK_INPUT ='CHECK_INPUT';\r\nexport const SET_SENDING_REQUEST ='SET_SENDING_REQUEST';\r\nexport const SET_LOADING ='IS_LOADING';\r\nexport const SET_STATUS ='SET_STATUS';\r\n\r\n\r\nexport const statuses={\r\n    POST_DATA: 'POST_DATA',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    SUCCESS: 'SUCCESS'\r\n};\r\n\r\nconst initialState = {\r\n   isCheck: false,\r\n    isSendingRequest: false,\r\n    isLoading: false,\r\n    status: statuses.POST_DATA\r\n};\r\n\r\nconst  WednesdayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case CHECK_INPUT:\r\n            return {\r\n                ...state,\r\n                isCheck: action.checked\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.loading\r\n            };\r\n        case SET_SENDING_REQUEST:\r\n            return {\r\n                ...state,\r\n                isSendingRequest: action.request\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\n\r\nexport const checkInputAC = (checked) => {\r\n    return {\r\n        type: CHECK_INPUT,\r\n        checked\r\n    }\r\n};\r\n\r\nexport const setStatusAC=(status)=>{\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    }\r\n};\r\n\r\nexport const setLoadingAC=(loading)=>{\r\n    return{\r\n        type: SET_LOADING,\r\n        loading\r\n    }\r\n};\r\n\r\nexport const setSendingRequestAC =(request)=>{\r\n    return{\r\n        type: SET_SENDING_REQUEST,\r\n        request\r\n    }\r\n}\r\n\r\nexport default  WednesdayReducer\r\n","import axios from \"axios\";\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-cafe-back.herokuapp.com/auth/test',\r\n});\r\n\r\nexport const api = {\r\n    getRespons(status){\r\n      return   instance.post('',{success: status})\r\n    }\r\n}\r\n\r\nexport const tryCatch = async ( onCheckClick ) => {\r\n    debugger\r\n    try {\r\n        const response = await onCheckClick();\r\n        console.log('answer: ', response.data);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('error: ', {...error});\r\n        return 'error';\r\n    }\r\n};","import React from \"react\";\r\nimport style from './wednes.module.css'\r\nimport Input from \"./Input\";\r\nimport  {addStyleAC} from \"../../SettingsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {checkInputAC, setLoadingAC, setSendingRequestAC, setStatusAC} from \"../../WednasdayReducer\";\r\nimport {api, tryCatch} from \"../../api/api\";\r\nimport louder from '../louder/louder.gif'\r\n\r\nclass Wednesday extends React.Component {\r\n\r\n    onChangedStyle = (id, status) => {\r\n\r\n        this.props.addStyle(id, status)\r\n    };\r\n\r\n    onCheckInput=(e)=>{\r\n        this.props.checkInput(e.currentTarget.checked)\r\n    };\r\n\r\n    onCheckClick = () => {\r\n        debugger\r\n        this.props.setStatus('INPROGRESS')\r\n        this.props.setLoading(true)\r\n        this.props.setSendingRequest(true)\r\n        api.getRespons(this.props.isCheck)\r\n            .then(response => {\r\n\r\n                console.log(response.data)\r\n                this.props.setStatus(\"SUCCESS\")\r\n                this.props.setLoading(false)\r\n                this.props.setSendingRequest(false)\r\n            })\r\n            .catch(error=>{\r\n                this.props.setStatus('ERROR')\r\n                this.props.setSendingRequest(false)\r\n                this.props.setLoading(false)\r\n            })\r\n        // axios.post('https://neko-cafe-back.herokuapp.com/auth/test',{success: this.props.isCheck})\r\n        //     .then(response => {\r\n        //     console.log(response.data)\r\n        // })\r\n    };\r\n\r\n\r\n\r\n    render = () => {\r\n\r\n        const inputRadio = this.props.style.map(s => {\r\n            return <Input\r\n                id={s.id}\r\n                name={s.name}\r\n                checked={s.status}\r\n                onChangedStyle={this.onChangedStyle}\r\n                key={s.id}\r\n            />\r\n        });\r\n        \r\n        let stylePage = this.props.style.find(s => s.status === true);\r\n\r\n        return (\r\n\r\n            <div className={style[stylePage.name]}>\r\n                {inputRadio}\r\n                <h1>Hello wednesday</h1>\r\n\r\n                <div>\r\n                    <input type='checkbox' onChange={this.onCheckInput} checked={this.props.isCheck} />\r\n                    <button disabled={this.props.isSendingRequest} onClick={()=>{tryCatch(this.onCheckClick)}}>Send</button>\r\n                    <div>\r\n                        {this.props.isLoading\r\n                            ? <img src={louder}/>\r\n                            :  <div>{this.props.status}</div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n                    Quisque velit lectus, semper quis tortor vestibulum, finibus\r\n                    mattis urna. Vestibulum dictum ante nec sem pharetra, in finibus nisi accumsan.\r\n                    Morbi elementum lorem at nulla rutrum gravida. Proin in est sit amet orci iaculis\r\n                    efficitur eu quis augue. Aenean laoreet vel urna ut scelerisque. Vestibulum facilisis\r\n                    enim felis, nec ornare diam dignissim ut. Nunc neque libero, faucibus sed ante nec,\r\n                    gravida bibendum risus.\r\n                    Suspendisse potenti. Phasellus in tincidunt arcu, in\r\n                    iaculis metus. Proin ac nunc in velit cursus placerat id at felis.\r\n                    Integer feugiat maximus nisi. Pellentesque a malesuada tellus, non semper dolor.\r\n                    Aenean malesuada elit hendrerit leo elementum, ac lacinia neque commodo.\r\n                    Sed malesuada enim sit amet pellentesque semper.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        style: state.settingsReducer.style,\r\n        isCheck: state.wednesdayReducer.isCheck,\r\n        isSendingRequest: state.wednesdayReducer.isSendingRequest,\r\n        status: state.wednesdayReducer.status,\r\n        isLoading: state.wednesdayReducer.isLoading\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addStyle(id, status){\r\n            const action = addStyleAC(id, status);\r\n            dispatch(action)\r\n        },\r\n        checkInput(checked){\r\n            const action=checkInputAC(checked);\r\n            dispatch(action)\r\n        },\r\n        setLoading(loading){\r\n            const action=setLoadingAC(loading)\r\n            dispatch (action)\r\n        },\r\n        setStatus(status){\r\n            const action= setStatusAC(status)\r\n            dispatch(action)\r\n        },\r\n        setSendingRequest(request){\r\n            const action = setSendingRequestAC(request)\r\n            dispatch(action)\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Wednesday)","import React from 'react';\nimport './App.css';\nimport {HashRouter, NavLink, Route} from \"react-router-dom\";\n\nimport Tuesday from \"./components/tousday/Tuesday\";\nimport Monday from \"./components/monday/Monday\";\nimport Louder from \"./components/louder/Louder\";\nimport Menu from \"./components/menu/Menu\";\nimport {connect} from \"react-redux\";\nimport Wednesday from \"./components/wednesday/wednasday\";\n\nclass App extends React.Component {\n    // state = {\n    //     loading: true,\n    // };\n\n    componentDidMount() {\n        this.props.loadingSet(true);\n        setTimeout(() => {\n            // this.setState({loading: false});\n            this.props.loadingSet(false)\n        }, 1000)\n    };\n\n    render = () => {\n        return (\n\n            this.props.loading\n                ? <Louder/>\n                : <HashRouter>\n                    <div className='app-wrapper'>\n                        < Menu/>\n                        {/*<Nik/>*/}\n                        {/*<Avatar/>*/}\n                        {/*<Messege quality={this.state.qualities}/>*/}\n                        <Route exact path='/' render={() => <Monday/>}/>\n                        <Route path='/Tuesday' render={() => <Tuesday/>}/>\n                        <Route path='/Wednesday' render={() => <Wednesday/>}/>\n                    </div>\n                </HashRouter>\n        )\n\n        // if(this.props.loading){\n        //     return <Louder />\n        // } else {\n        //     return (\n        //         <HashRouter>\n        //             <div className='app-wrapper'>\n        //                 < Menu />\n        //                 {/*<Nik/>*/}\n        //                 {/*<Avatar/>*/}\n        //                 {/*<Messege quality={this.state.qualities}/>*/}\n        //                 <Route exact path='/' render={() => <Monday />}/>\n        //                 <Route path='/Tuesday' render={() => <Tuesday />}/>\n        //             </div>\n        //         </HashRouter>\n        //     )\n        // }\n\n    }\n}\n\n\n// const App = () => {\n//\n//     let click = React.createRef();\n//     let counter = React.createRef();\n//     let state = {\n//         start: 0\n//     }\n//\n//     let addAlert = function(){\n//\n//         state.start = ++state.start\n//         alert('Hello' + ' ' + click.current.value);\n//         click.current.value = '';\n//     };\n//     let qualities = [\n//         {id:0, title: 'communist', type: false},\n//         {id:1, title: 'liberall', type: true},\n//         {id:2, title: 'monarchist', type: false},\n//         {id:3, title: 'anarchist', type: false},\n//         {id:4, title: 'nationalist', type: false},\n//     ];\n//\n//     return (\n//         <div className='app-wrapper'>\n//             <Nik/>\n//             <Avatar/>\n//             <Messege quality={qualities}/>\n//             <div>\n//                 <span ref={counter}>{state.start}</span>\n//                 <input type='text' ref={click} placeholder='add name'/>\n//                 <button onClick={addAlert}>Enter</button>\n//             </div>\n//         </div>\n//     )\n// }\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.tuesdayPage.loading\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        loadingSet: (status) => {\n            const action = {\n                type: \"SET_LOADING\",\n                loading: status\n            };\n            dispatch(action)\n        }\n    }\n}\n\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default ConnectedApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\n\r\n\r\nconst initialState = {\r\n    todolists: [\r\n        {id: 0, title: 'what to learn', tasks: [\r\n                {\r\n                    id: 1,\r\n                    title: 'Css',\r\n                    isDone: false,\r\n                    priority: 'hight',\r\n                    created: new Date().toLocaleString(),\r\n                    updated: '',\r\n                    finished: '',\r\n                }\r\n            ]\r\n        },\r\n        {id: 1, title: 'what to bay', tasks: []}\r\n    ],\r\n    loading: false,\r\n};\r\n\r\n\r\nconst TuesdayReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_TODOLIST\":\r\n            let newTodoList = {\r\n                id: (new Date()).getTime(),\r\n                title: action.title,\r\n                tasks: [],\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                todolists: [...state.todolists, newTodoList]\r\n            };\r\n\r\n        case \"DELETE_TODOLIST\":\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.filter(tl=> tl.id!==action.todolistId)\r\n            };\r\n\r\n        case \"ADD_TASK\":\r\n            let newTask = {\r\n                id: (new Date()).getTime(),\r\n                title: action.title,\r\n                isDone: false,\r\n                priority: 'low',\r\n                created: new Date().toLocaleString(),\r\n                updated: '',\r\n                finished: '',\r\n            };\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl=>{\r\n                    if (tl.id!==action.todolistId ){\r\n                        return tl\r\n                    } else {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: [...tl.tasks, newTask]\r\n\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n\r\n        case \"CHENGE_STATUS\":\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl=>{\r\n                    if(tl.id!==action.todolistId){\r\n                        return tl\r\n                    } else {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t=>{\r\n                                if(t.id !== action.taskId){\r\n                                    return t\r\n                                } else {\r\n                                    return {...t,\r\n                                        isDone: action.isDone,\r\n                                        finished: new Date().toLocaleString()\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n\r\n        case \"CHANGE_TYTLE\":\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl=>{\r\n                    if(tl.id !== action.todolistId){\r\n                        return tl\r\n                    }else {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t=>{\r\n                                if (t.id !== action.taskId){\r\n                                    return t\r\n                                } else {\r\n                                    return {\r\n                                        ...t,\r\n                                        title: action.title,\r\n                                        update: new Date().toLocaleString()\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n        case \"CHANGE_PRIORITY\":\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl=>{\r\n                    if(tl.id !== action.todolistId){\r\n                        return tl\r\n                    }else {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.map(t=>{\r\n                                if(t.id !== action.taskId){\r\n                                    return t\r\n                                }else {\r\n                                    return {\r\n                                        ...t,\r\n                                        priority: action.priority,\r\n                                        update: new Date().toLocaleString(),\r\n                                    }\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n\r\n        case \"DELETE_TASK\":\r\n            return {\r\n                ...state,\r\n                todolists: state.todolists.map(tl=>{\r\n                    if(tl.id !== action.todolistId){\r\n                        return tl\r\n                    } else {\r\n                        return {\r\n                            ...tl,\r\n                            tasks: tl.tasks.filter(t=> t.id !== action.taskId)\r\n                        }\r\n                    }\r\n                })\r\n            };\r\n\r\n        case \"SET_LOADING\":\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n};\r\n\r\nexport default TuesdayReducer\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport TuesdayReducer from \"./TuesdayReducer\";\r\nimport SettingsReducer from \"./SettingsReducer\";\r\nimport WednesdayReducer from \"./WednasdayReducer\";\r\n\r\nconst reducer = combineReducers({\r\n        tuesdayPage: TuesdayReducer,\r\n        settingsReducer: SettingsReducer,\r\n        wednesdayReducer: WednesdayReducer,\r\n});\r\n\r\nconst store = createStore(reducer);\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}